interface CalculateInput {
  value1: number;
  value2: number;
  op: string;
}

function getOperation(str: string): Operation {
  if (['add', 'multiply', 'divide'].find((op) => op === str) === undefined)
    throw 'not operation';
  return str as Operation;
}

function isCalcInput(body: object): body is CalculateInput {
  return 'value1' in body && 'value2' in body && 'op' in body;
}

function validateCalculateBody(body: object): CalculateInput {
  if (isCalcInput(body)) {
    const value1 = getNumber(body.value1);
    const value2 = getNumber(body.value2);
    const op = getOperation(body.op);
    return { value1, value2, op };
  }
  throw 'Invalid body';
}

app.post('/calculate', (req, res) => {
  const { value1, value2, op }: CalculateInput = validateCalculateBody(
    req.body as object
  );

  const result = calculator(value1, value2, op as Operation);
  res.send(result);
});